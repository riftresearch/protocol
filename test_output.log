warning: btc-light-client-script v0.1.0 (/home/shanmu/Documents/stuff/crypto/protocol/bin/benchmark-light-client) ignoring invalid dependency `rift-program` which is missing a lib target
warning: hypernode v0.1.0 (/home/shanmu/Documents/stuff/crypto/protocol/bin/hypernode) ignoring invalid dependency `rift-program` which is missing a lib target
warning: rift-sdk@0.1.0: rustc +succinct --version: "rustc 1.85.0-dev\n"
warning: rift-sdk@0.1.0: rift-program built at 2025-06-06 14:51:25
warning: unused import: `Script`
  --> crates/rift-sdk/src/btc_txn_broadcaster.rs:12:90
   |
12 |     absolute::LockTime, address::NetworkChecked, transaction, Amount, FeeRate, OutPoint, Script,
   |                                                                                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `alloy::providers::ProviderBuilder`
 --> crates/rift-sdk/src/fee_provider.rs:5:5
  |
5 | use alloy::providers::ProviderBuilder;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `esplora_client::MempoolInfo`
 --> crates/rift-sdk/src/fee_provider.rs:7:5
  |
7 | use esplora_client::MempoolInfo;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `reqwest::Url`
 --> crates/rift-sdk/src/fee_provider.rs:8:5
  |
8 | use reqwest::Url;
  |     ^^^^^^^^^^^^

warning: unused import: `CHUNK_SIZE`
 --> crates/rift-sdk/src/quote.rs:3:21
  |
3 | use crate::chains::{CHUNK_SIZE, RPC_TIMEOUT};
  |                     ^^^^^^^^^^

warning: unused imports: `ProviderBuilder` and `U256`
 --> crates/rift-sdk/src/quote.rs:6:42
  |
6 |     primitives::{address, Address, U160, U256},
  |                                          ^^^^
7 |     providers::{Provider, ProviderBuilder},
  |                           ^^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
  --> crates/rift-sdk/src/quote.rs:12:5
   |
12 | use std::time::Duration;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused imports: `ProviderBuilder` and `Provider`
 --> crates/rift-sdk/src/chains.rs:4:34
  |
4 | use alloy::providers::{Identity, Provider, ProviderBuilder, RootProvider};
  |                                  ^^^^^^^^  ^^^^^^^^^^^^^^^

warning: unused import: `rand::seq::SliceRandom`
 --> crates/rift-sdk/src/chains.rs:5:5
  |
5 | use rand::seq::SliceRandom;
  |     ^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde_json::Value`
 --> crates/rift-sdk/src/chains.rs:6:5
  |
6 | use serde_json::Value;
  |     ^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::timeout`
 --> crates/rift-sdk/src/chains.rs:8:5
  |
8 | use tokio::time::timeout;
  |     ^^^^^^^^^^^^^^^^^^^^

warning: unused import: `anyhow::Result`
  --> crates/rift-sdk/src/chains.rs:10:5
   |
10 | use anyhow::Result;
   |     ^^^^^^^^^^^^^^

warning: unused import: `crate::quote::FetchEthPrice`
  --> crates/rift-sdk/src/chains.rs:12:5
   |
12 | use crate::quote::FetchEthPrice;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `i`
   --> crates/rift-sdk/src/bitcoin_utils.rs:277:18
    |
277 |             for (i, response) in responses.iter().enumerate() {
    |                  ^ help: if this is intentional, prefix it with an underscore: `_i`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `current_tip_path`
   --> crates/rift-sdk/src/checkpoint_mmr.rs:468:29
    |
468 |         let (lca_leaf_hash, current_tip_path, prior_checkpoint_tip_path) = self
    |                             ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_current_tip_path`

warning: unused variable: `chain_id`
   --> crates/rift-sdk/src/fee_provider.rs:286:13
    |
286 |         let chain_id = self.provider.get_chain_id().await?;
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unreachable expression
   --> crates/rift-sdk/src/txn_broadcast.rs:268:9
    |
174 | /         loop {
175 | |             let request = match request_receiver.recv().await {
176 | |                 Some(req) => req,
177 | |                 None => {
...   |
266 | |                 .map_err(|_| eyre::eyre!("Failed to send transaction execution result"))?;
267 | |         }
    | |_________- any code following this expression is unreachable
268 |           Ok(())
    |           ^^^^^^ unreachable expression
    |
    = note: `#[warn(unreachable_code)]` on by default

warning: unused import: `futures::stream::TryStreamExt`
  --> crates/rift-sdk/src/bitcoin_utils.rs:17:5
   |
17 | use futures::stream::TryStreamExt;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `futures::StreamExt`
  --> crates/rift-sdk/src/bitcoin_utils.rs:19:5
   |
19 | use futures::StreamExt;
   |     ^^^^^^^^^^^^^^^^^^

warning: unused import: `Prover`
 --> crates/rift-sdk/src/proof_generator.rs:4:29
  |
4 |     EnvProver, HashableKey, Prover, ProverClient, SP1ProofWithPublicValues, SP1ProvingKey,
  |                             ^^^^^^

warning: unused import: `Provider`
 --> crates/rift-sdk/src/quote.rs:7:17
  |
7 |     providers::{Provider, ProviderBuilder},
  |                 ^^^^^^^^

warning: unused import: `rand::seq::SliceRandom`
  --> crates/rift-sdk/src/quote.rs:10:5
   |
10 | use rand::seq::SliceRandom;
   |     ^^^^^^^^^^^^^^^^^^^^^^

warning: method `delete_many` is never used
  --> crates/rift-sdk/src/checkpoint_mmr.rs:91:14
   |
38 | impl CheckpointMap {
   | ------------------ method in this implementation
...
91 |     async fn delete_many(&self, leaf_hashes_hex: Vec<String>) -> Result<()> {
   |              ^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: method `delete_many` is never used
   --> crates/rift-sdk/src/checkpoint_mmr.rs:218:14
    |
124 | impl<H: LeafHasher> BlockTree<H> {
    | -------------------------------- method in this implementation
...
218 |     async fn delete_many(&self, leaf_hashes_hex: Vec<String>) -> Result<()> {
    |              ^^^^^^^^^^^

warning: method `insert` is never used
   --> crates/rift-sdk/src/indexed_mmr.rs:176:14
    |
164 | impl ReverseIndex {
    | ----------------- method in this implementation
...
176 |     async fn insert(
    |              ^^^^^^

warning: unused variable: `current_tip_header`
   --> crates/bitcoin-light-client-core/src/lib.rs:597:13
    |
597 |         let current_tip_header = last_appended_header;
    |             ^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_current_tip_header`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: `rift-sdk` (lib) generated 25 warnings (run `cargo fix --lib -p rift-sdk` to apply 13 suggestions)
warning: `bitcoin-light-client-core` (lib test) generated 1 warning
warning: `rift-sdk` (lib test) generated 25 warnings (25 duplicates)
warning: unused variable: `payment_index`
   --> crates/data-engine/src/db.rs:734:21
    |
734 |                 let payment_index: i64 = row.get(0)?;
    |                     ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_payment_index`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused import: `dyn_abi::SolType`
 --> crates/data-engine/src/engine.rs:2:5
  |
2 |     dyn_abi::SolType,
  |     ^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `data-engine` (lib) generated 2 warnings
warning: `data-engine` (lib test) generated 2 warnings (2 duplicates)
warning: unused variable: `utilized_vault`
   --> bin/hypernode/src/release_watchtower.rs:180:13
    |
180 |         let utilized_vault = swap_with_deposit.order.order.clone();
    |             ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_utilized_vault`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `block_merkle_root`
   --> bin/hypernode/src/swap_watchtower.rs:741:32
    |
741 |             let (merkle_proof, block_merkle_root) = generate_bitcoin_txn_merkle_proof(
    |                                ^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_block_merkle_root`

warning: field `0` is never read
  --> bin/hypernode/src/fork_watchtower.rs:82:12
   |
82 |     NewTip(BlockLeaf),
   |     ------ ^^^^^^^^^
   |     |
   |     field in this variant
   |
   = note: `ForkWatchtowerEvent` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis
   = note: `#[warn(dead_code)]` on by default
help: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field
   |
82 |     NewTip(()),
   |            ~~

warning: unused import: `bitcoin_light_client_core::hasher::Keccak256Hasher`
 --> bin/market-maker/src/auction_claimer.rs:5:5
  |
5 | use bitcoin_light_client_core::hasher::Keccak256Hasher;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `models::ChainAwareOrder`
 --> bin/market-maker/src/auction_claimer.rs:6:47
  |
6 | use data_engine::{engine::ContractDataEngine, models::ChainAwareOrder};
  |                                               ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `rift_sdk::checkpoint_mmr::CheckpointedBlockTree`
 --> bin/market-maker/src/auction_claimer.rs:9:5
  |
9 | use rift_sdk::checkpoint_mmr::CheckpointedBlockTree;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `rift_sdk::create_websocket_wallet_provider`
  --> bin/market-maker/src/auction_claimer.rs:10:5
   |
10 | use rift_sdk::create_websocket_wallet_provider;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `BlockLeaf`
  --> bin/market-maker/src/auction_claimer.rs:13:70
   |
13 | use sol_bindings::BTCDutchAuctionHouse::{BTCDutchAuctionHouseErrors, BlockLeaf};
   |                                                                      ^^^^^^^^^

warning: unused import: `BitcoinLightClientInstance`
  --> bin/market-maker/src/auction_claimer.rs:15:51
   |
15 |     AuctionUpdated, BTCDutchAuctionHouseInstance, BitcoinLightClientInstance, DutchAuction, MappingWhitelistInstance
   |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `RwLock`
  --> bin/market-maker/src/auction_claimer.rs:19:25
   |
19 |     sync::{mpsc, Mutex, RwLock},
   |                         ^^^^^^

warning: unused import: `time::Duration`
 --> bin/market-maker/src/lib.rs:3:22
  |
3 | use std::{sync::Arc, time::Duration};
  |                      ^^^^^^^^^^^^^^

warning: unused import: `bitcoin_light_client_core::hasher::Keccak256Hasher`
 --> bin/market-maker/src/lib.rs:9:5
  |
9 | use bitcoin_light_client_core::hasher::Keccak256Hasher;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `bitcoincore_rpc_async::Auth`
  --> bin/market-maker/src/lib.rs:10:5
   |
10 | use bitcoincore_rpc_async::Auth;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `data_engine::engine::ContractDataEngine`
  --> bin/market-maker/src/lib.rs:13:5
   |
13 | use data_engine::engine::ContractDataEngine;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `log::error`
  --> bin/market-maker/src/lib.rs:15:5
   |
15 | use log::error;
   |     ^^^^^^^^^^

warning: unused imports: `BtcFeeProvider`, `bitcoin_utils::AsyncBitcoinClient`, and `checkpoint_mmr::CheckpointedBlockTree`
  --> bin/market-maker/src/lib.rs:18:5
   |
18 |     bitcoin_utils::AsyncBitcoinClient,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
19 |     checkpoint_mmr::CheckpointedBlockTree,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
20 |     create_websocket_wallet_provider,
21 |     fee_provider::{BtcFeeOracle, BtcFeeProvider},
   |                                  ^^^^^^^^^^^^^^

warning: unused variable: `btc_wallet`
   --> bin/market-maker/src/lib.rs:145:13
    |
145 |         let btc_wallet = P2WPKHBitcoinWallet::from_mnemonic(
    |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_btc_wallet`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `t_1`
   --> bin/market-maker/src/auction_claimer.rs:225:9
    |
225 |     let t_1 = start_block + decay_blocks;
    |         ^^^ help: if this is intentional, prefix it with an underscore: `_t_1`

warning: unused variable: `leaf`
   --> bin/market-maker/src/auction_claimer.rs:558:22
    |
558 |                 let (leaf, siblings, peaks) = match proof_result {
    |                      ^^^^ help: if this is intentional, prefix it with an underscore: `_leaf`

warning: constant `BTC_P2PKH_OUTPUT_VBYTES` is never used
  --> bin/market-maker/src/auction_claimer.rs:31:7
   |
31 | const BTC_P2PKH_OUTPUT_VBYTES: u64 = 34;  // P2PKH output size
   |       ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `BTC_P2SH_OUTPUT_VBYTES` is never used
  --> bin/market-maker/src/auction_claimer.rs:32:7
   |
32 | const BTC_P2SH_OUTPUT_VBYTES: u64 = 32;   // P2SH output size
   |       ^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `current_tip_header`
   --> bin/benchmark-light-client/src/bin/benchmark.rs:220:28
    |
220 |     let (current_tip_leaf, current_tip_header, current_tip_proof, bch_leaves) =
    |                            ^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_current_tip_header`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: `hypernode` (lib) generated 3 warnings
warning: `market-maker` (lib) generated 18 warnings (run `cargo fix --lib -p market-maker` to apply 13 suggestions)
warning: `hypernode` (lib test) generated 3 warnings (3 duplicates)
warning: `btc-light-client-script` (bin "benchmark" test) generated 1 warning
warning: `market-maker` (lib test) generated 18 warnings (18 duplicates)
warning: unused variable: `data_engine_server`
  --> bin/data-engine-server/src/bin/main.rs:23:9
   |
23 |     let data_engine_server =
   |         ^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_data_engine_server`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `data-engine-server` (bin "data-engine-server" test) generated 1 warning
warning: unused doc comment
  --> crates/devnet/src/lib.rs:37:1
   |
37 | /// The mock token artifact
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ rustdoc does not generate documentation for macro invocations
   |
   = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion
   = note: `#[warn(unused_doc_comments)]` on by default

warning: unused doc comment
  --> crates/devnet/src/lib.rs:45:1
   |
45 | /// The SP1 mock verifier
   | ^^^^^^^^^^^^^^^^^^^^^^^^^ rustdoc does not generate documentation for macro invocations
   |
   = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion

warning: unused import: `reqwest::Url`
  --> crates/devnet/src/bitcoin_devnet.rs:10:5
   |
10 | use reqwest::Url;
   |     ^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Conf as ElectrsConf` and `downloaded_exe_path`
  --> crates/devnet/src/bitcoin_devnet.rs:19:16
   |
19 | use electrsd::{downloaded_exe_path, Conf as ElectrsConf, ElectrsD};
   |                ^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::SyntheticBTC::configureMinterCall`
  --> crates/devnet/src/bitcoin_devnet.rs:24:5
   |
24 | use crate::SyntheticBTC::configureMinterCall;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `bitcoincore_rpc_async::RpcApi`
  --> crates/devnet/src/lib.rs:23:5
   |
23 | use bitcoincore_rpc_async::RpcApi;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `signers::Signer`
  --> crates/devnet/src/lib.rs:63:43
   |
63 | use alloy::{node_bindings::AnvilInstance, signers::Signer};
   |                                           ^^^^^^^^^^^^^^^

warning: constant `TOKEN_NAME` is never used
  --> crates/devnet/src/lib.rs:30:7
   |
30 | const TOKEN_NAME: &str = "Coinbase Wrapped BTC";
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `TOKEN_DECIMALS` is never used
  --> crates/devnet/src/lib.rs:31:7
   |
31 | const TOKEN_DECIMALS: u8 = 8;
   |       ^^^^^^^^^^^^^^

warning: fields `checkpoint_file_handle` and `data_engine_server` are never read
   --> crates/devnet/src/lib.rs:148:5
    |
142 | pub struct RiftDevnet {
    |            ---------- fields in this struct
...
148 |     checkpoint_file_handle: NamedTempFile,
    |     ^^^^^^^^^^^^^^^^^^^^^^
149 |     data_engine_server: Option<DataEngineServer>,
    |     ^^^^^^^^^^^^^^^^^^

warning: `devnet` (lib) generated 10 warnings (run `cargo fix --lib -p devnet` to apply 3 suggestions)
warning: `devnet` (lib test) generated 10 warnings (10 duplicates)
   Compiling integration-tests v0.1.0 (/home/shanmu/Documents/stuff/crypto/protocol/integration-tests)
warning: unused import: `alloy::eips::eip6110::DEPOSIT_REQUEST_TYPE`
 --> integration-tests/src/auction_claimer_test.rs:3:5
  |
3 | use alloy::eips::eip6110::DEPOSIT_REQUEST_TYPE;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `ProviderBuilder`
 --> integration-tests/src/auction_claimer_test.rs:5:47
  |
5 | use alloy::providers::{DynProvider, Provider, ProviderBuilder};
  |                                               ^^^^^^^^^^^^^^^

warning: unused import: `alloy::rpc::types::Log as AlloyLog`
 --> integration-tests/src/auction_claimer_test.rs:6:5
  |
6 | use alloy::rpc::types::Log as AlloyLog;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `alloy::signers::local::LocalWallet`
 --> integration-tests/src/auction_claimer_test.rs:8:5
  |
8 | use alloy::signers::local::LocalWallet;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `B256`
  --> integration-tests/src/auction_claimer_test.rs:10:45
   |
10 | use alloy_primitives::{FixedBytes, LogData, B256};
   |                                             ^^^^

warning: unused import: `alloy_sol_types::SolValue`
  --> integration-tests/src/auction_claimer_test.rs:11:5
   |
11 | use alloy_sol_types::SolValue;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `eyre::Result`
  --> integration-tests/src/auction_claimer_test.rs:13:5
   |
13 | use eyre::Result;
   |     ^^^^^^^^^^^^

warning: unused import: `warn`
  --> integration-tests/src/auction_claimer_test.rs:15:31
   |
15 | use log::{debug, error, info, warn};
   |                               ^^^^

warning: unused import: `PendingAuction`
  --> integration-tests/src/auction_claimer_test.rs:18:5
   |
18 |     PendingAuction,
   |     ^^^^^^^^^^^^^^

warning: unused imports: `BtcFeeProvider` and `EthFeeProvider`
  --> integration-tests/src/auction_claimer_test.rs:20:44
   |
20 | use rift_sdk::fee_provider::{BtcFeeOracle, BtcFeeProvider, EthFeeOracle, EthFeeProvider};
   |                                            ^^^^^^^^^^^^^^                ^^^^^^^^^^^^^^

warning: unused imports: `BTCDutchAuctionHouseInstance`, `MappingWhitelistInstance`, and `RiftExchangeInstance`
  --> integration-tests/src/auction_claimer_test.rs:23:43
   |
23 |     AuctionUpdated, BTCDutchAuctionHouse, BTCDutchAuctionHouseInstance, DutchAuction,
   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
24 |     DutchAuctionParams, MappingWhitelist, MappingWhitelistInstance, RiftExchangeInstance,
   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
  --> integration-tests/src/auction_claimer_test.rs:26:5
   |
26 | use std::collections::HashMap;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `AtomicU64` and `Ordering`
  --> integration-tests/src/auction_claimer_test.rs:28:25
   |
28 | use std::sync::atomic::{AtomicU64, Ordering};
   |                         ^^^^^^^^^  ^^^^^^^^

warning: unused import: `std::time::Duration`
  --> integration-tests/src/auction_claimer_test.rs:30:5
   |
30 | use std::time::Duration;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::timeout`
  --> integration-tests/src/auction_claimer_test.rs:33:5
   |
33 | use tokio::time::timeout;
   |     ^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
 --> integration-tests/src/btc_txn_broadcaster_test.rs:1:5
  |
1 | use std::sync::Arc;
  |     ^^^^^^^^^^^^^^

warning: unused import: `ScriptBuf`
 --> integration-tests/src/btc_txn_broadcaster_test.rs:4:32
  |
4 | use bitcoin::{Amount, Network, ScriptBuf, TxOut};
  |                                ^^^^^^^^^

warning: unused import: `RiftDevnet`
 --> integration-tests/src/btc_txn_broadcaster_test.rs:5:29
  |
5 | use devnet::{BitcoinDevnet, RiftDevnet};
  |                             ^^^^^^^^^^

warning: unused imports: `DatabaseLocation` and `txn_builder::P2WPKHBitcoinWallet`
  --> integration-tests/src/btc_txn_broadcaster_test.rs:10:5
   |
10 |     txn_builder::P2WPKHBitcoinWallet,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
11 |     DatabaseLocation,
   |     ^^^^^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> integration-tests/src/market_maker_hypernode_e2e_test.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::str::FromStr`
 --> integration-tests/src/market_maker_hypernode_e2e_test.rs:4:5
  |
4 | use std::str::FromStr;
  |     ^^^^^^^^^^^^^^^^^

warning: unused imports: `ProviderBuilder`, `WsConnect`, and `utils::format_units`
 --> integration-tests/src/market_maker_hypernode_e2e_test.rs:7:18
  |
7 |     primitives::{utils::format_units, Address, U256, TxHash},
  |                  ^^^^^^^^^^^^^^^^^^^
8 |     providers::{Provider, ProviderBuilder, WsConnect, ext::AnvilApi},
  |                           ^^^^^^^^^^^^^^^  ^^^^^^^^^

warning: unused imports: `Transaction`, `consensus::Encodable`, and `hashes::Hash`
  --> integration-tests/src/market_maker_hypernode_e2e_test.rs:11:15
   |
11 | use bitcoin::{consensus::Encodable, hashes::Hash, Amount, Transaction};
   |               ^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^          ^^^^^^^^^^^

warning: unused import: `hypernode::HypernodeArgs`
  --> integration-tests/src/market_maker_hypernode_e2e_test.rs:16:5
   |
16 | use hypernode::HypernodeArgs;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `AuctionClaimerConfig` and `MakerConfig`
  --> integration-tests/src/market_maker_hypernode_e2e_test.rs:19:39
   |
19 |     auction_claimer::{AuctionClaimer, AuctionClaimerConfig},
   |                                       ^^^^^^^^^^^^^^^^^^^^
20 |     MakerConfig,
   |     ^^^^^^^^^^^

warning: unused imports: `BtcFeeOracle`, `EthFeeOracle`, `btc_txn_broadcaster::SimpleBitcoinTransactionBroadcaster`, `proof_generator::ProofGeneratorType`, and `txn_builder::get_outputs_for_orders`
  --> integration-tests/src/market_maker_hypernode_e2e_test.rs:23:5
   |
23 |     btc_txn_broadcaster::SimpleBitcoinTransactionBroadcaster,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
24 |     create_websocket_wallet_provider,
25 |     fee_provider::{BtcFeeOracle, BtcFeeProvider, EthFeeOracle, EthFeeProvider},
   |                    ^^^^^^^^^^^^                  ^^^^^^^^^^^^
26 |     proof_generator::ProofGeneratorType,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
27 |     txn_broadcast::TransactionBroadcaster,
28 |     txn_builder::get_outputs_for_orders,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `AuctionUpdated`, `BaseCreateOrderParams`, `DutchAuctionParams`, `DutchAuction`, and `OrderCreated`
  --> integration-tests/src/market_maker_hypernode_e2e_test.rs:32:5
   |
32 |     BaseCreateOrderParams, BTCDutchAuctionHouse, DutchAuctionParams, MappingWhitelist,
   |     ^^^^^^^^^^^^^^^^^^^^^                        ^^^^^^^^^^^^^^^^^^
33 |     OrderCreated, AuctionUpdated, DutchAuction,
   |     ^^^^^^^^^^^^  ^^^^^^^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `corepc_node::serde_json`
  --> integration-tests/src/market_maker_hypernode_e2e_test.rs:37:5
   |
37 | use corepc_node::serde_json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `U256`
 --> integration-tests/src/quote_test.rs:2:27
  |
2 |     primitives::{address, U256},
  |                           ^^^^

warning: unused import: `fetch_weth_cbbtc_conversion_rates`
 --> integration-tests/src/quote_test.rs:7:23
  |
7 | use rift_sdk::quote::{fetch_weth_cbbtc_conversion_rates, q64_96_to_float};
  |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated type alias `alloy::signers::alloy_signer_local::LocalWallet`: use `PrivateKeySigner` instead
 --> integration-tests/src/auction_claimer_test.rs:8:28
  |
8 | use alloy::signers::local::LocalWallet;
  |                            ^^^^^^^^^^^
  |
  = note: `#[warn(deprecated)]` on by default

warning: unused variable: `auction_house_data_engine`
   --> integration-tests/src/market_maker_hypernode_e2e_test.rs:286:5
    |
286 |     auction_house_data_engine: &Arc<data_engine::engine::ContractDataEngine>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_auction_house_data_engine`
    |
    = note: `#[warn(unused_variables)]` on by default

error[E0609]: no field `orderIndex` on type `sol_bindings::Order`
   --> integration-tests/src/market_maker_hypernode_e2e_test.rs:677:82
    |
677 |         match devnet_config.devnet.contract_data_engine.get_order_by_index(order.orderIndex).await {
    |                                                                                  ^^^^^^^^^^ unknown field
    |
    = note: available fields are: `index`, `timestamp`, `unlockTimestamp`, `amount`, `takerFee` ... and 8 others

warning: unused variable: `contract_data_engine`
   --> integration-tests/src/market_maker_hypernode_e2e_test.rs:765:9
    |
765 |     let contract_data_engine = auction_house_data_engine.clone(); // Use the BTCDutchAuctionHouse data engine
    |         ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_contract_data_engine`

warning: unused variable: `event_time`
   --> integration-tests/src/market_maker_hypernode_e2e_test.rs:958:17
    |
958 |             let event_time = std::time::Instant::now();
    |                 ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_event_time`

warning: unused variable: `contract_config`
    --> integration-tests/src/market_maker_hypernode_e2e_test.rs:1956:5
     |
1956 |     contract_config: &AdditionalContractConfig,
     |     ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_contract_config`

warning: unused variable: `test_accounts`
    --> integration-tests/src/market_maker_hypernode_e2e_test.rs:2057:5
     |
2057 |     test_accounts: &TestAccounts,
     |     ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_test_accounts`

warning: unused variable: `devnet_config`
    --> integration-tests/src/market_maker_hypernode_e2e_test.rs:2058:5
     |
2058 |     devnet_config: &DevNetConfig,
     |     ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_devnet_config`

warning: unused variable: `safe_siblings`
    --> integration-tests/src/market_maker_hypernode_e2e_test.rs:2149:21
     |
2149 |     let (safe_leaf, safe_siblings, safe_peaks) = 
     |                     ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_safe_siblings`

warning: unused variable: `safe_peaks`
    --> integration-tests/src/market_maker_hypernode_e2e_test.rs:2149:36
     |
2149 |     let (safe_leaf, safe_siblings, safe_peaks) = 
     |                                    ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_safe_peaks`

warning: unused variable: `deploy_block_number`
  --> integration-tests/src/test_utils.rs:89:22
   |
89 |     let (mut devnet, deploy_block_number) = RiftDevnet::builder()
   |                      ^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_deploy_block_number`

warning: unused variable: `decimals`
   --> integration-tests/src/test_utils.rs:122:9
    |
122 |     let decimals = devnet
    |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_decimals`

warning: unused variable: `bitcoin_txid`
   --> integration-tests/src/test_utils.rs:270:9
    |
270 |     let bitcoin_txid: [u8; 32] = payment_tx_id.as_raw_hash().to_byte_array();
    |         ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_bitcoin_txid`

warning: unused variable: `swap_block_height`
   --> integration-tests/src/test_utils.rs:272:9
    |
272 |     let swap_block_height = current_block_height + 1;
    |         ^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_swap_block_height`

warning: unused import: `WalletProvider`
  --> integration-tests/src/devnet_test.rs:10:51
   |
10 | use alloy::providers::{Provider, ProviderBuilder, WalletProvider, WsConnect};
   |                                                   ^^^^^^^^^^^^^^

warning: unused import: `bitcoincore_rpc_async::bitcoin::hashes::Hash`
  --> integration-tests/src/devnet_test.rs:15:5
   |
15 | use bitcoincore_rpc_async::bitcoin::hashes::Hash as BitcoinHash;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `hypernode::Provider`
  --> integration-tests/src/fork_watchtower_test.rs:10:5
   |
10 | use hypernode::Provider;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `BtcFeeProvider`
  --> integration-tests/src/market_maker_hypernode_e2e_test.rs:25:34
   |
25 |     fee_provider::{BtcFeeOracle, BtcFeeProvider, EthFeeOracle, EthFeeProvider},
   |                                  ^^^^^^^^^^^^^^

warning: unused import: `Provider`
 --> integration-tests/src/quote_test.rs:3:17
  |
3 |     providers::{Provider, ProviderBuilder},
  |                 ^^^^^^^^

warning: unused import: `util::SubscriberInitExt`
  --> integration-tests/src/test_utils.rs:10:26
   |
10 | use tracing_subscriber::{util::SubscriberInitExt, EnvFilter};
   |                          ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `txid`
   --> integration-tests/src/devnet_test.rs:258:9
    |
258 |     let txid = funding_utxo.txid;
    |         ^^^^ help: if this is intentional, prefix it with an underscore: `_txid`

warning: unused variable: `orders_updated_log`
   --> integration-tests/src/devnet_test.rs:363:9
    |
363 |     let orders_updated_log = OrderCreated::decode_log(
    |         ^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_orders_updated_log`

warning: unused variable: `tip_mmr_proof`
   --> integration-tests/src/devnet_test.rs:734:9
    |
734 |     let tip_mmr_proof = devnet
    |         ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tip_mmr_proof`

warning: unused variable: `release_liquidity_receipt`
   --> integration-tests/src/devnet_test.rs:783:9
    |
783 |     let release_liquidity_receipt = match release_liquidity_tx {
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_release_liquidity_receipt`

warning: unused variable: `rift_exchange`
  --> integration-tests/src/fork_watchtower_test.rs:23:18
   |
23 |     let (devnet, rift_exchange, _, maker, transaction_broadcaster) = create_deposit(true).await;
   |                  ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_rift_exchange`

warning: unused variable: `maker`
  --> integration-tests/src/fork_watchtower_test.rs:23:36
   |
23 |     let (devnet, rift_exchange, _, maker, transaction_broadcaster) = create_deposit(true).await;
   |                                    ^^^^^ help: if this is intentional, prefix it with an underscore: `_maker`

warning: unused variable: `transaction_broadcaster`
  --> integration-tests/src/fork_watchtower_test.rs:23:43
   |
23 |     let (devnet, rift_exchange, _, maker, transaction_broadcaster) = create_deposit(true).await;
   |                                           ^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_transaction_broadcaster`

warning: unused variable: `rift_exchange`
  --> integration-tests/src/fork_watchtower_test.rs:51:18
   |
51 |     let (devnet, rift_exchange, _, maker, transaction_broadcaster) = create_deposit(true).await;
   |                  ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_rift_exchange`

warning: unused variable: `maker`
  --> integration-tests/src/fork_watchtower_test.rs:51:36
   |
51 |     let (devnet, rift_exchange, _, maker, transaction_broadcaster) = create_deposit(true).await;
   |                                    ^^^^^ help: if this is intentional, prefix it with an underscore: `_maker`

warning: unused variable: `transaction_broadcaster`
  --> integration-tests/src/fork_watchtower_test.rs:51:43
   |
51 |     let (devnet, rift_exchange, _, maker, transaction_broadcaster) = create_deposit(true).await;
   |                                           ^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_transaction_broadcaster`

warning: unused variable: `rift_exchange`
   --> integration-tests/src/fork_watchtower_test.rs:193:18
    |
193 |     let (devnet, rift_exchange, _, maker, transaction_broadcaster) = create_deposit(true).await;
    |                  ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_rift_exchange`

warning: unused variable: `maker`
   --> integration-tests/src/fork_watchtower_test.rs:193:36
    |
193 |     let (devnet, rift_exchange, _, maker, transaction_broadcaster) = create_deposit(true).await;
    |                                    ^^^^^ help: if this is intentional, prefix it with an underscore: `_maker`

warning: unused variable: `transaction_broadcaster`
   --> integration-tests/src/fork_watchtower_test.rs:193:43
    |
193 |     let (devnet, rift_exchange, _, maker, transaction_broadcaster) = create_deposit(true).await;
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_transaction_broadcaster`

warning: unused variable: `rift_exchange`
   --> integration-tests/src/fork_watchtower_test.rs:525:18
    |
525 |     let (devnet, rift_exchange, _, maker, transaction_broadcaster) = create_deposit(true).await;
    |                  ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_rift_exchange`

warning: unused variable: `maker`
   --> integration-tests/src/fork_watchtower_test.rs:525:36
    |
525 |     let (devnet, rift_exchange, _, maker, transaction_broadcaster) = create_deposit(true).await;
    |                                    ^^^^^ help: if this is intentional, prefix it with an underscore: `_maker`

warning: unused variable: `transaction_broadcaster`
   --> integration-tests/src/fork_watchtower_test.rs:525:43
    |
525 |     let (devnet, rift_exchange, _, maker, transaction_broadcaster) = create_deposit(true).await;
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_transaction_broadcaster`

warning: unused variable: `rift_exchange`
   --> integration-tests/src/fork_watchtower_test.rs:759:18
    |
759 |     let (devnet, rift_exchange, _, maker, transaction_broadcaster) = create_deposit(true).await;
    |                  ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_rift_exchange`

warning: unused variable: `maker`
   --> integration-tests/src/fork_watchtower_test.rs:759:36
    |
759 |     let (devnet, rift_exchange, _, maker, transaction_broadcaster) = create_deposit(true).await;
    |                                    ^^^^^ help: if this is intentional, prefix it with an underscore: `_maker`

warning: unused variable: `transaction_broadcaster`
   --> integration-tests/src/fork_watchtower_test.rs:759:43
    |
759 |     let (devnet, rift_exchange, _, maker, transaction_broadcaster) = create_deposit(true).await;
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_transaction_broadcaster`

warning: unused variable: `txid`
   --> integration-tests/src/hypernode_test.rs:225:9
    |
225 |     let txid = funding_utxo.txid;
    |         ^^^^ help: if this is intentional, prefix it with an underscore: `_txid`

warning: unused variable: `broadcast_tx`
   --> integration-tests/src/hypernode_test.rs:273:9
    |
273 |     let broadcast_tx = devnet
    |         ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_broadcast_tx`

warning: unused variable: `bitcoin_txid`
   --> integration-tests/src/hypernode_test.rs:282:9
    |
282 |     let bitcoin_txid: [u8; 32] = payment_tx_id.as_raw_hash().to_byte_array();
    |         ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_bitcoin_txid`

warning: unused variable: `swap_block_height`
   --> integration-tests/src/hypernode_test.rs:284:9
    |
284 |     let swap_block_height = current_block_height + 1;
    |         ^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_swap_block_height`

For more information about this error, try `rustc --explain E0609`.
warning: `integration-tests` (lib test) generated 72 warnings
error: could not compile `integration-tests` (lib test) due to 1 previous error; 72 warnings emitted
